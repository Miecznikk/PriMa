# Generated by Django 4.2.6 on 2023-10-24 15:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('Investments', '0007_alter_apartmentimage_caption'),
    ]

    operations = [
        migrations.CreateModel(
            name='ApartmentSearchResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_area', models.FloatField(validators=[django.core.validators.MinValueValidator(10.0, message='Value must be greater or equal than 10'), django.core.validators.MaxValueValidator(300.0, message='Value must be less or equal than 300')])),
                ('max_area', models.FloatField(validators=[django.core.validators.MinValueValidator(10.0, message='Value must be greater or equal than 10'), django.core.validators.MaxValueValidator(300.0, message='Value must be less or equal than 300')])),
                ('min_price', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, message='Value must be greater than 1'), django.core.validators.MaxValueValidator(100000000, message='Value cannot exceed 100 milion')])),
                ('max_price', models.IntegerField(validators=[django.core.validators.MinValueValidator(1, message='Value must be greater than 1'), django.core.validators.MaxValueValidator(100000000, message='Value cannot exceed 100 milion')])),
                ('min_floor', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(20)])),
                ('max_floor', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(20)])),
                ('min_rooms', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, 'Value must be a positive integer'), django.core.validators.MaxValueValidator(10, 'Value cannot exceed 10')])),
                ('has_balcony', models.BooleanField(null=True)),
                ('has_garden', models.BooleanField(null=True)),
                ('has_garage', models.BooleanField(null=True)),
                ('gas_AC', models.BooleanField(null=True)),
                ('has_two_floors', models.BooleanField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
